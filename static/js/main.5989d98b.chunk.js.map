{"version":3,"sources":["utils/utils.ts","components/shared/Pagination/Pagination.tsx","components/shared/Link/Link.tsx","components/Character/CharacterStatus.tsx","components/Character/CharacterCard.tsx","components/Character/CharacterItem.tsx","state/character.ts","components/Character/CharacterPagination.tsx","state/global.ts","utils/hooks/useLoading.ts","graphql/queries.ts","components/Character/CharacterProfile.tsx","graphql/hooks/useCharacter.ts","components/Character/CharacterList.tsx","graphql/hooks/useCharacters.ts","components/Layout/SearchBar.tsx","components/Layout/Footer.tsx","components/Layout/Layout.tsx","App.tsx","index.tsx"],"names":["convertToSlug","text","toLowerCase","replace","Pagination","page","count","onChange","Stack","spacing","variant","shape","color","Link","props","StyledLink","styled","RouterLink","theme","palette","primary","colors","Alive","Dead","unknown","CharacterStatus","status","badgeColor","Box","bgcolor","width","height","borderRadius","CharacterCard","id","name","image","Card","sx","minWidth","className","CardMedia","component","alt","CardContent","display","flexDirection","alignItems","justifyContent","to","Typography","gutterBottom","CharacterItem","lastSeenCharacters","atom","key","default","lastSeenCharactersState","selector","get","set","lastNineSeen","filter","c","slice","characterPageState","CharacterPagination","useRecoilValue","location","useLocation","pageNumber","useParams","navigate","useNavigate","parseInt","handleChange","useCallback","e","value","pathname","includes","search","rootPathname","loadingState","useLoading","loading","useRecoilState","setLoading","useEffect","startLoading","stopLoading","GET_CHARACTERS","gql","GET_CHARACTERS_BY_NAME","GET_CHARACTER_BY_IDS","CharacterProfile","setLastSeenCharacters","useSetRecoilState","characterId","useQuery","variables","ids","onCompleted","data","charactersByIds","length","error","character","useCharacter","message","marginY","Helmet","gap","species","type","gender","CharacterList","useSearchParams","toString","isSearch","setPageCount","query","characters","Math","ceil","info","useCharacters","results","marginTop","flexWrap","padding","map","paddingY","Search","position","backgroundColor","alpha","common","white","marginRight","marginLeft","breakpoints","up","SearchIconWrapper","pointerEvents","StyledInputBase","InputBase","paddingLeft","transition","transitions","create","SearchBar","React","useState","setSearch","flexGrow","AppBar","Toolbar","placeholder","onKeyDown","undefined","target","inputProps","LinearProgress","Footer","role","Layout","App","path","element","index","client","ApolloClient","uri","cache","InMemoryCache","version","ReactDOM","render","StrictMode","ApolloProvider","document","getElementById"],"mappings":"wNAAaA,EAAgB,SAACC,GAAD,OAC5BA,EACEC,cACAC,QAAQ,KAAM,KACdA,QAAQ,WAAY,GAJM,E,yBCUhBC,EAA+B,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,KAAMC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAC3D,OACC,cAACC,EAAA,EAAD,CAAOC,QAAS,EAAhB,SACC,cAAC,IAAD,CACCJ,KAAMA,EACNC,MAAOA,EACPI,QAAQ,WACRC,MAAM,UACNC,MAAM,UACNL,SAAUA,KAIb,E,gBCpBYM,EAAO,SAACC,GACpB,OAAO,cAACC,EAAD,eAAgBD,GACvB,EAEKC,EAAaC,YAAOC,IAAPD,EAClB,gBAAGE,EAAH,EAAGA,MAAH,4EAGUA,EAAMC,QAAQlB,KAAKmB,QAH7B,2JAUuBF,EAAMC,QAAQlB,KAAKmB,QAV1C,oOCAKC,EAAS,CACdC,MAAO,QACPC,KAAM,MACNC,QAAS,QAQKC,EALS,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,OACpBC,EAAaN,EAAOK,GAC1B,OAAO,cAACE,EAAA,EAAD,CAAKC,QAASF,EAAYG,MAAO,GAAIC,OAAQ,GAAIC,aAAc,GACtE,ECYcC,EAlBc,SAAC,GAAoD,IAAlDC,EAAiD,EAAjDA,GAAIC,EAA6C,EAA7CA,KAAMC,EAAuC,EAAvCA,MAAOV,EAAgC,EAAhCA,OAChD,OACC,eAACW,EAAA,EAAD,CAAMC,GAAI,CAAEC,SAAU,KAAOC,UAAU,YAAvC,UACC,cAACC,EAAA,EAAD,CAAWC,UAAU,MAAMX,OAAO,MAAMK,MAAOA,EAAOO,IAAKR,IAC3D,cAACS,EAAA,EAAD,UACC,eAAChB,EAAA,EAAD,CAAKiB,QAAQ,OAAOC,cAAc,MAAMC,WAAW,SAASC,eAAgB,gBAA5E,UACC,cAAC,EAAD,CAAMC,GAAE,mBAAcf,EAAd,YAAoBlC,EAAcmC,IAA1C,SACC,cAACe,EAAA,EAAD,CAAYC,cAAY,EAACzC,QAAQ,KAAKgC,UAAU,MAAhD,SACEP,MAGH,cAAC,EAAD,CAAiBT,OAAQA,WAK7B,ECjBY0B,EAAgB,SAAC,GAAyB,IAAvBlB,EAAsB,EAAtBA,GAAIC,EAAkB,EAAlBA,KACnC,OACC,cAAC,IAAD,CAAMc,GAAE,mBAAcf,EAAd,YAAoBlC,EAAcmC,IAA1C,SACC,cAACe,EAAA,EAAD,CAAYxC,QAAQ,QAAQE,MAAM,iBAAlC,SACEuB,KAIJ,E,wCCfKkB,EAAqBC,YAA0B,CACpDC,IAAK,qBACLC,QAAS,KAGGC,EAA0BC,YAAS,CAC/CH,IAAK,uBACLI,IAAK,mBAAaA,EAAb,EAAGA,KAAcN,EAAjB,EACLO,IAAK,cAAsC,IAAnCA,EAAkC,EAAlCA,IAAKD,EAA6B,EAA7BA,IAASzB,EAAoB,EAApBA,GAAIC,EAAgB,EAAhBA,KACnB0B,EAAeF,EAAIN,GAAoBS,QAAO,SAAAC,GAAC,OAAIA,EAAE5B,OAASA,CAAf,IAAqB6B,MAAM,EAAG,GACnFJ,EAAyBP,EAAtB,CAA2C,CAAEnB,KAAIC,SAAjD,mBAA4D0B,IAC/D,IAGWI,EAAqBX,YAAa,CAC9CC,IAAK,qBACLC,QAAS,ICcKU,EAzB+B,WAC7C,IAAM5D,EAAQ6D,YAAeF,GACvBG,EAAWC,cACTC,EAAeC,cAAfD,WACFE,EAAWC,cACXpE,EAAOiE,EAAaI,SAASJ,GAAc,EAE3CK,EAAeC,uBACpB,SAACC,EAA+BC,GAE/B,GAD6BV,EAASW,SAASC,SAAS,QAEvDR,EAASJ,EAASW,SAAS5E,QAAQ,YAA1B,eAA+C2E,IAAWV,EAASa,YAD7E,CAKA,IACMC,EADuC,MAAtBd,EAASW,SACM,GAAKX,EAASW,SACpDP,EAAS,UAAGU,EAAH,iBAAwBJ,GAAUV,EAASa,OAJnD,CAKD,GACD,CAACb,EAASW,SAAUX,EAASa,OAAQT,IAGtC,OAAO,cAAC,EAAD,CAAYlE,MAAOA,EAAOD,KAAMA,EAAME,SAAUoE,GACvD,EC7BYQ,EAAe7B,YAAc,CACzCC,IAAK,UACLC,SAAS,ICAG4B,EAAa,SAACC,GAC1B,MAAuBC,YAAeH,GAA7BI,EAAT,oBACAC,qBAAU,kBAAMD,EAAWF,EAAjB,GAA2B,CAACA,EAASE,IAE/C,IAAME,EAAeb,uBAAY,WAChCW,GAAW,EACX,GAAE,CAACA,IAEEG,EAAcd,uBAAY,WAC/BW,GAAW,EACX,GAAE,CAACA,IAEJ,MAAO,CAACF,EAASI,EAAcC,EAC/B,E,iBCfYC,EAAiBC,YAAH,kOAedC,EAAyBD,YAAH,6QAetBE,EAAuBF,YAAH,sPC1BpBG,EAAmB,WAC/B,MCK2B,WAAO,IAAD,EAC3BC,EAAwBC,YAAkBxC,GACxCyC,EAAgB3B,cAAhB2B,YACFhE,EAAE,OAAGgE,QAAH,IAAGA,OAAH,EAAGA,EAAa/F,QAAQ,UAAW,IAC3C,EAAiCgG,YAAuBL,EAAsB,CAC7EM,UAAW,CAAEC,IAAK,CAACnE,IACnBoE,YAAa,SAAAC,GAAS,IAAD,EACpB,OAAIA,QAAJ,IAAIA,GAAJ,UAAIA,EAAMC,uBAAV,OAAI,EAAuBC,QAC1BT,EAAsBO,EAAKC,gBAAgB,GAE5C,IANMnB,EAAR,EAAQA,QAASqB,EAAjB,EAAiBA,MAAOH,EAAxB,EAAwBA,KAWxB,OAFAnB,EAAWC,GAEJ,CAAEqB,QAAOC,WADM,OAAJJ,QAAI,IAAJA,GAAA,UAAAA,EAAMC,uBAAN,eAAuBC,SAAUF,EAAKC,gBAAgB,GAExE,CDrB6BI,GAArBF,EAAR,EAAQA,MAAOC,EAAf,EAAeA,UACf,OAAID,EAAc,iDAAYA,EAAMG,QAAlB,OACbF,EAGJ,eAAC/E,EAAA,EAAD,CAAKiB,QAAS,OAAQG,eAAgB,SAAU8D,QAAS,EAAzD,UACC,cAACC,EAAA,EAAD,UACC,gCAAQJ,EAAUxE,SAEnB,eAACE,EAAA,EAAD,CAAMC,GAAI,CAAEC,SAAU,KAAtB,UACC,cAACE,EAAA,EAAD,CAAWC,UAAU,MAAMX,OAAO,MAAMK,MAAOuE,EAAUvE,MAAOO,IAAKgE,EAAUxE,OAC/E,eAACS,EAAA,EAAD,WACC,cAAChB,EAAA,EAAD,CAAKiB,QAAQ,OAAOC,cAAc,MAAMC,WAAW,SAASC,eAAgB,gBAA5E,SACC,cAACE,EAAA,EAAD,CAAYC,cAAY,EAACzC,QAAQ,KAAKgC,UAAU,MAAhD,SACEiE,EAAUxE,SAGb,eAACP,EAAA,EAAD,CAAKiB,QAAS,OAAQC,cAAc,SAASkE,IAAK,EAAlD,UACC,gCACC,wCADD,IACiBL,EAAUM,WAE3B,gCACC,qCADD,IACcN,EAAUO,QAExB,gCACC,uCADD,IACgBP,EAAUQ,UAE1B,gCACC,+CACCR,EAAUvC,SAASjC,QAErB,cAAC,IAAD,CAAMc,GAAG,IAAT,8CA7BkB,cAACrB,EAAA,EAAD,kCAmCvB,EEpCYwF,EAAgB,WAC5B,MCU4B,WAC3B,MAAqBC,cACfpC,EADN,oBAC4BqC,WAAWnH,QAAQ,IAAK,IAC9CoH,EAAWtC,EAAOwB,OAAS,EAEzBnC,EAAeC,cAAfD,WACFjE,EAAOiE,EAAaI,SAASJ,GAAc,EAC3CkD,EAAevB,YAAkBhC,GAEjCwD,EAAQF,EAAW1B,EAAyBF,EAC5CS,EAAYmB,EACd,CACElH,OACAyD,OAAQ,CAAE3B,KAAM8C,IAElB,CAAE5E,QAEN,EAAiC8F,YAC/BsB,EACA,CAAErB,cAFIf,EAAR,EAAQA,QAASqB,EAAjB,EAAiBA,MAAOH,EAAxB,EAAwBA,KAaxB,OARAf,qBAAU,WACR,OAAIe,QAAJ,IAAIA,KAAMmB,WACRF,EAAaG,KAAKC,KAAKrB,EAAKmB,WAAWG,KAAKvH,MPrCf,KOsC1BkH,EAAa,EACnB,GAAE,CAACA,EAAcjB,IAElBnB,EAAWC,GAEJ,CAAEqB,QAAOH,OACjB,CDzCwBuB,GAAhBpB,EAAR,EAAQA,MAAOH,EAAf,EAAeA,KAEf,GAAIG,EAAO,OAAO,iDAAYA,EAAMG,QAAlB,OAClB,GAAI,OAACN,QAAD,IAACA,MAAMmB,WAAY,OAAO,0DAE9B,IAAMK,EAAUxB,EAAKmB,WAAWK,QAChC,OACC,eAACnG,EAAA,EAAD,CAAKoG,UAAW,EAAhB,UACC,cAACjB,EAAA,EAAD,UACC,gEAED,eAACnF,EAAA,EAAD,CAAKiB,QAAQ,OAAOC,cAAe,MAAOmF,SAAS,OAAOlF,WAAY,QAASC,eAAe,QAA9F,UACC,cAACpB,EAAA,EAAD,CAAKiB,QAAS,OAAQmE,IAAK,EAAGkB,QAAS,EAAGD,SAAU,OAAQjF,eAAgB,SAA5E,SACE+E,EAAQI,KAAI,SAAAxB,GAAS,OACrB,wBAAC,EAAD,2BAAmBA,GAAnB,IAA8BpD,IAAKoD,EAAUzE,KADxB,MAIvB,cAACN,EAAA,EAAD,CAAKW,SAAU,IAAKV,QAAS,QAA7B,SACC,cAAC,IAAD,SAGF,cAACD,EAAA,EAAD,CAAKiB,QAAS,OAAQG,eAAgB,SAAUoF,SAAU,EAA1D,SACC,cAAC,EAAD,QAIH,E,wEEnBKC,GAASrH,YAAO,MAAPA,EAAc,gBAAGE,EAAH,EAAGA,MAAH,oBAC5BoH,SAAU,WACVtG,aAAcd,EAAMP,MAAMqB,aAC1BuG,gBAAiBC,aAAMtH,EAAMC,QAAQsH,OAAOC,MAAO,KACnD,UAAW,CACVH,gBAAiBC,aAAMtH,EAAMC,QAAQsH,OAAOC,MAAO,MAEpDC,YAAazH,EAAMT,QAAQ,GAC3BmI,WAAY,EACZ9G,MAAO,QACNZ,EAAM2H,YAAYC,GAAG,MAAQ,CAC7BF,WAAY1H,EAAMT,QAAQ,GAC1BqB,MAAO,OAZoB,IAgBvBiH,GAAoB/H,YAAO,MAAPA,EAAc,kBAAgB,CACvDkH,QADuC,EAAGhH,MAC3BT,QAAQ,EAAG,GAC1BsB,OAAQ,OACRuG,SAAU,WACVU,cAAe,OACfnG,QAAS,OACTE,WAAY,SACZC,eAAgB,SAPuB,IAUlCiG,GAAkBjI,YAAOkI,IAAPlI,EAAkB,gBAAGE,EAAH,EAAGA,MAAH,MAAgB,CACzDN,MAAO,UACP,wBAAwB,aACvBsH,QAAShH,EAAMT,QAAQ,EAAG,EAAG,EAAG,GAEhC0I,YAAY,cAAD,OAAgBjI,EAAMT,QAAQ,GAA9B,KACX2I,WAAYlI,EAAMmI,YAAYC,OAAO,SACrCxH,MAAO,QACNZ,EAAM2H,YAAYC,GAAG,MAAQ,CAC7BhH,MAAO,SATgC,IAsD3ByH,GAxCU,SAACzI,GACzB,MAA4B0I,IAAMC,SAAiB,IAAnD,mBAAOxE,EAAP,KAAeyE,EAAf,KACMlF,EAAWC,cAOXY,EAAUlB,YAAegB,GAC/B,OACC,cAACvD,EAAA,EAAD,CAAKU,GAAI,CAAEqH,SAAU,GAArB,SACC,eAACC,EAAA,EAAD,CAAQtB,SAAS,QAAjB,UACC,eAACuB,GAAA,EAAD,WACC,cAAC,EAAD,CAAM5G,GAAG,IAAT,SACC,cAACC,EAAA,EAAD,CAAYxC,QAAQ,KAApB,8BAED,eAAC,GAAD,WACC,cAACqI,GAAD,UACC,cAAC,IAAD,MAED,cAACE,GAAD,CACC/G,GAAG,eACH4H,YAAY,eACZhF,MAAOG,EACP8E,UAtBc,SAAClF,GACN,UAAVA,EAAEtB,KAA8B,OAAX0B,QAA8B+E,IAAX/E,GAC3CT,EAAS,WAAD,OAAYS,GAErB,EAmBK1E,SAAU,SAACsE,GAAD,OAA4C6E,EAAU7E,EAAEoF,OAAOnF,MAA/D,EACVoF,WAAY,CAAE,aAAc,kBAI9B7E,GACA,cAACzD,EAAA,EAAD,CAAKU,GAAI,CAAER,MAAO,QAAlB,SACC,cAACqI,EAAA,EAAD,UAML,ECrEcC,GAnBO,WACrB,IAAMrC,EAAU5D,YAAeV,GAC/B,OACC,cAAC7B,EAAA,EAAD,CACCiB,QAAS,OACToF,SAAU,OACVjB,IAAK,EACLtE,UAAU,SACVwF,QAAS,EACTrG,QAAS,YACTwI,KAAK,SAPN,SASEtC,EAAQI,KAAI,gBAAGjG,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAP,OACZ,cAAC,EAAD,CAAeA,KAAMA,EAAMD,GAAIA,GAASA,EAD5B,KAKf,EClBYoI,GAAS,WACrB,OACC,eAAC1I,EAAA,EAAD,WACC,cAAC,GAAD,IACA,cAACA,EAAA,EAAD,CAAKwG,SAAU,EAAf,SACC,cAAC,IAAD,MAED,cAAC,GAAD,MAGF,ECXc,SAASmC,KACvB,OACC,cAAC,IAAD,UACC,cAAC,IAAD,UACC,eAAC,IAAD,CAAOC,KAAK,IAAIC,QAAS,cAAC,GAAD,IAAzB,UACC,cAAC,IAAD,CAAOC,OAAK,EAACD,QAAS,cAAC,EAAD,MACtB,eAAC,IAAD,CAAOD,KAAK,SAAZ,UACC,cAAC,IAAD,CAAOE,OAAK,EAACD,QAAS,cAAC,EAAD,MACtB,cAAC,IAAD,CAAOD,KAAK,OAAZ,SACC,cAAC,IAAD,CAAOA,KAAK,cAAcC,QAAS,cAAC,EAAD,WAGrC,cAAC,IAAD,CAAOD,KAAK,OAAZ,SACC,cAAC,IAAD,CAAOA,KAAK,cAAcC,QAAS,cAAC,EAAD,QAEpC,cAAC,IAAD,CAAOD,KAAK,UAAZ,SACC,cAAC,IAAD,CAAOA,KAAK,eAAeC,QAAS,cAAC,EAAD,cAMzC,C,kCCrBKE,GAAS,IAAIC,KAAa,CAC/BC,IAAK,sCACLC,MAAO,IAAIC,KACX5I,KAAM,eACN6I,QAAS,QAGVC,IAASC,OACR,cAAC,IAAMC,WAAP,UACC,cAAC,IAAD,UACC,cAACC,GAAA,EAAD,CAAgBT,OAAQA,GAAxB,SACC,cAACJ,GAAD,UAIHc,SAASC,eAAe,Q","file":"static/js/main.5989d98b.chunk.js","sourcesContent":["export const convertToSlug = (text: string) =>\n\ttext\n\t\t.toLowerCase()\n\t\t.replace(/ /g, '-')\n\t\t.replace(/[^\\w-]+/g, '');\n","import MUIPagination from '@mui/material/Pagination';\nimport Stack from '@mui/material/Stack';\nimport React from 'react';\n\ntype Props = {\n\tpage: number;\n\tcount: number;\n\tonChange: (e: React.ChangeEvent<unknown>, value: number) => void;\n};\n\nexport const Pagination: React.VFC<Props> = ({ page, count, onChange }) => {\n\treturn (\n\t\t<Stack spacing={2}>\n\t\t\t<MUIPagination\n\t\t\t\tpage={page}\n\t\t\t\tcount={count}\n\t\t\t\tvariant=\"outlined\"\n\t\t\t\tshape=\"rounded\"\n\t\t\t\tcolor=\"primary\"\n\t\t\t\tonChange={onChange}\n\t\t\t/>\n\t\t</Stack>\n\t);\n};\n\nexport default Pagination;\n","import { styled } from '@mui/material';\nimport { Link as RouterLink, LinkProps } from 'react-router-dom';\n\nexport const Link = (props: LinkProps) => {\n\treturn <StyledLink {...props} />;\n};\n\nconst StyledLink = styled(RouterLink)(\n\t({ theme }) => `\n  text-decoration: none;\n  position: relative;\n  color: ${theme.palette.text.primary};\n  &::before {\n    content: '';\n    position: absolute;\n    width: 100%;\n    height: 2px;\n    border-radius: 4px;\n    background-color: ${theme.palette.text.primary};\n    bottom: 0;\n    left: 0;\n    transform-origin: right;\n    transform: scaleX(0);\n    transition: transform .3s ease-in-out;\n  }\n  &:hover::before {\n    transform-origin: left;\n    transform: scaleX(1);\n  }\n`\n);\n","import { Box } from '@mui/material';\nimport React from 'react';\nimport { Status } from '../../interfaces/character';\n\ntype Props = {\n\tstatus: Status;\n};\n\nconst colors = {\n\tAlive: 'green',\n\tDead: 'red',\n\tunknown: 'gray',\n};\n\nconst CharacterStatus = ({ status }: Props) => {\n\tconst badgeColor = colors[status];\n\treturn <Box bgcolor={badgeColor} width={15} height={15} borderRadius={2} />;\n};\n\nexport default CharacterStatus;\n","import { Box } from '@mui/material';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport CardMedia from '@mui/material/CardMedia';\nimport Typography from '@mui/material/Typography';\nimport React from 'react';\nimport { CharacterCardType, Status } from '../../interfaces/character';\nimport { convertToSlug } from '../../utils/utils';\nimport { Link } from '../shared';\nimport CharacterStatus from './CharacterStatus';\n\nexport const CharacterCard = ({ id, name, image, status }: CharacterCardType) => {\n\treturn (\n\t\t<Card sx={{ minWidth: 250 }} className=\"character\">\n\t\t\t<CardMedia component=\"img\" height=\"140\" image={image} alt={name} />\n\t\t\t<CardContent>\n\t\t\t\t<Box display=\"flex\" flexDirection=\"row\" alignItems=\"center\" justifyContent={'space-between'}>\n\t\t\t\t\t<Link to={`/profile/${id}-${convertToSlug(name)}`}>\n\t\t\t\t\t\t<Typography gutterBottom variant=\"h6\" component=\"div\">\n\t\t\t\t\t\t\t{name}\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</Link>\n\t\t\t\t\t<CharacterStatus status={status as Status} />\n\t\t\t\t</Box>\n\t\t\t</CardContent>\n\t\t</Card>\n\t);\n};\n\nexport default CharacterCard;\n","import Typography from '@mui/material/Typography';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { convertToSlug } from '../../utils/utils';\n\ntype Props = {\n\tid: string;\n\tname: string;\n};\n\nexport const CharacterItem = ({ id, name }: Props) => {\n\treturn (\n\t\t<Link to={`/profile/${id}-${convertToSlug(name)}`}>\n\t\t\t<Typography variant=\"body2\" color=\"text.secondary\">\n\t\t\t\t{name}\n\t\t\t</Typography>\n\t\t</Link>\n\t);\n};\n\nexport default CharacterItem;\n","import { atom, selector } from 'recoil';\nimport { LastSeenCharacter } from '../interfaces/character';\n\nconst lastSeenCharacters = atom<LastSeenCharacter[]>({\n\tkey: 'lastSeenCharacters',\n\tdefault: [],\n});\n\nexport const lastSeenCharactersState = selector({\n\tkey: 'addLastSeenCharacter',\n\tget: ({ get }) => get(lastSeenCharacters),\n\tset: ({ set, get }, { id, name }: any) => {\n\t\tconst lastNineSeen = get(lastSeenCharacters).filter(c => c.name !== name).slice(0, 9);\n\t\tset<LastSeenCharacter[]>(lastSeenCharacters, [{ id, name }, ...lastNineSeen]);\n\t},\n});\n\nexport const characterPageState = atom<number>({\n\tkey: 'characterPageState',\n\tdefault: 1,\n});\n","import React, { useCallback } from 'react';\nimport { useLocation, useNavigate, useParams } from 'react-router-dom';\nimport { useRecoilValue } from 'recoil';\nimport { characterPageState } from '../../state/character';\nimport { Pagination } from '../shared';\n\nexport const CHARACTERS_PER_PAGE = 20;\n\nexport const CharacterPagination: React.VFC = () => {\n\tconst count = useRecoilValue(characterPageState);\n\tconst location = useLocation();\n\tconst { pageNumber } = useParams();\n\tconst navigate = useNavigate();\n\tconst page = pageNumber ? parseInt(pageNumber) : 1;\n\n\tconst handleChange = useCallback(\n\t\t(e: React.ChangeEvent<unknown>, value: number) => {\n\t\t\tconst hasLocationPageRoute = location.pathname.includes('page');\n\t\t\tif (hasLocationPageRoute) {\n\t\t\t\tnavigate(location.pathname.replace(/page\\/\\d+/, `page/${value}`) + location.search);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst isLocationRoot = location.pathname === '/';\n\t\t\tconst rootPathname = isLocationRoot ? '' : location.pathname;\n\t\t\tnavigate(`${rootPathname}/page/${value}` + location.search);\n\t\t},\n\t\t[location.pathname, location.search, navigate]\n\t);\n\n\treturn <Pagination count={count} page={page} onChange={handleChange} />;\n};\n\nexport default CharacterPagination;\n","import { atom } from 'recoil';\n\nexport const loadingState = atom<boolean>({\n\tkey: 'loading',\n\tdefault: false,\n});\n","import { useCallback, useEffect } from 'react';\nimport { useRecoilState } from 'recoil';\nimport { loadingState } from '../../state/global';\n\nexport const useLoading = (loading: boolean) => {\n\tconst [, setLoading] = useRecoilState(loadingState);\n\tuseEffect(() => setLoading(loading), [loading, setLoading]);\n\n\tconst startLoading = useCallback(() => {\n\t\tsetLoading(true);\n\t}, [setLoading]);\n\n\tconst stopLoading = useCallback(() => {\n\t\tsetLoading(false);\n\t}, [setLoading]);\n\n\treturn [loading, startLoading, stopLoading];\n};\n","import { gql } from '@apollo/client';\n\nexport const GET_CHARACTERS = gql`\n\tquery characters($page: Int) {\n\t\tcharacters(page: $page) {\n\t\t\tinfo {\n\t\t\t\tcount\n\t\t\t}\n\t\t\tresults {\n\t\t\t\tid\n\t\t\t\tname\n\t\t\t\timage\n\t\t\t\tstatus\n\t\t\t}\n\t\t}\n\t}\n`;\nexport const GET_CHARACTERS_BY_NAME = gql`\n\tquery characters($page: Int, $filter: FilterCharacter) {\n\t\tcharacters(page: $page, filter: $filter) {\n\t\t\tinfo {\n\t\t\t\tcount\n\t\t\t}\n\t\t\tresults {\n\t\t\t\tid\n\t\t\t\tname\n\t\t\t\timage\n\t\t\t\tstatus\n\t\t\t}\n\t\t}\n\t}\n`;\nexport const GET_CHARACTER_BY_IDS = gql`\n\tquery charactersByIds($ids: [ID!]!) {\n\t\tcharactersByIds(ids: $ids) {\n\t\t\tid\n\t\t\tname\n\t\t\timage\n\t\t\tstatus\n\t\t\tgender\n\t\t\tspecies\n\t\t\ttype\n\t\t\tlocation {\n\t\t\t\tname\n\t\t\t}\n\t\t}\n\t}\n`;\n","import React from 'react';\nimport { Box, Card, CardContent, CardMedia, Typography } from '@mui/material';\nimport { Link } from 'react-router-dom';\nimport { Helmet } from 'react-helmet'\nimport { useCharacter } from '../../graphql/hooks';\n\nexport const CharacterProfile = () => {\n\tconst { error, character } = useCharacter();\n\tif (error) return <>`Error! ${error.message}`</>;\n\tif (!character) return <Box>Character not found!</Box>;\n\n\treturn (\n\t\t<Box display={'flex'} justifyContent={'center'} marginY={5}>\n\t\t\t<Helmet>\n\t\t\t\t<title>{character.name}</title>\n\t\t\t</Helmet>\n\t\t\t<Card sx={{ minWidth: 400 }}>\n\t\t\t\t<CardMedia component=\"img\" height=\"300\" image={character.image} alt={character.name} />\n\t\t\t\t<CardContent>\n\t\t\t\t\t<Box display=\"flex\" flexDirection=\"row\" alignItems=\"center\" justifyContent={'space-between'}>\n\t\t\t\t\t\t<Typography gutterBottom variant=\"h6\" component=\"div\">\n\t\t\t\t\t\t\t{character.name}\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</Box>\n\t\t\t\t\t<Box display={'flex'} flexDirection=\"column\" gap={2}>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<b>Species</b> {character.species}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<b>Type</b> {character.type}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<b>Gender</b> {character.gender}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<b>Location name </b>\n\t\t\t\t\t\t\t{character.location.name}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<Link to=\"/\">Back to the homepage</Link>\n\t\t\t\t\t</Box>\n\t\t\t\t</CardContent>\n\t\t\t</Card>\n\t\t</Box>\n\t);\n};\n\nexport default CharacterProfile;\n","import { useQuery } from '@apollo/client';\nimport { useParams } from 'react-router-dom';\nimport { useSetRecoilState } from 'recoil';\nimport { Character } from '../../interfaces/character';\nimport { lastSeenCharactersState } from '../../state/character';\nimport { useLoading } from '../../utils/hooks';\nimport { GET_CHARACTER_BY_IDS } from '../queries';\n\ntype API_RESPONSE = {\n\tcharactersByIds: Character[];\n};\n\nexport const useCharacter = () => {\n\tconst setLastSeenCharacters = useSetRecoilState(lastSeenCharactersState);\n\tconst { characterId } = useParams();\n\tconst id = characterId?.replace(/[^0-9]/g, '');\n\tconst { loading, error, data } = useQuery<API_RESPONSE>(GET_CHARACTER_BY_IDS, {\n\t\tvariables: { ids: [id] },\n\t\tonCompleted: data => {\n\t\t\tif (data?.charactersByIds?.length) {\n\t\t\t\tsetLastSeenCharacters(data.charactersByIds[0]);\n\t\t\t}\n\t\t},\n\t});\n\n\tuseLoading(loading);\n\tconst character = data?.charactersByIds?.length && data.charactersByIds[0];\n\treturn { error, character };\n};\n","import React from 'react';\nimport { Box } from '@mui/material';\nimport { Outlet } from 'react-router-dom';\nimport { Helmet } from 'react-helmet'\nimport { useCharacters } from '../../graphql/hooks/useCharacters';\nimport CharacterCard from './CharacterCard';\nimport CharacterPagination from './CharacterPagination';\n\nexport const CharacterList = () => {\n\tconst { error, data } = useCharacters();\n\n\tif (error) return <>`Error! ${error.message}`</>;\n\tif (!data?.characters) return <>'No results found'</>;\n\n\tconst results = data.characters.results;\n\treturn (\n\t\t<Box marginTop={4}>\n\t\t\t<Helmet>\n\t\t\t\t<title>Rick and Morty Characters</title>\n\t\t\t</Helmet>\n\t\t\t<Box display=\"flex\" flexDirection={'row'} flexWrap=\"wrap\" alignItems={'start'} justifyContent=\"start\">\n\t\t\t\t<Box display={'flex'} gap={2} padding={2} flexWrap={'wrap'} justifyContent={'center'}>\n\t\t\t\t\t{results.map(character => (\n\t\t\t\t\t\t<CharacterCard {...character} key={character.id} />\n\t\t\t\t\t))}\n\t\t\t\t</Box>\n\t\t\t\t<Box minWidth={200} bgcolor={'green'}>\n\t\t\t\t\t<Outlet />\n\t\t\t\t</Box>\n\t\t\t</Box>\n\t\t\t<Box display={'flex'} justifyContent={'center'} paddingY={2}>\n\t\t\t\t<CharacterPagination />\n\t\t\t</Box>\n\t\t</Box>\n\t);\n};\n\nexport default CharacterList;\n","import { useQuery } from \"@apollo/client\";\nimport { useEffect } from \"react\";\nimport { useParams, useSearchParams } from \"react-router-dom\";\nimport { useSetRecoilState } from \"recoil\";\nimport { CHARACTERS_PER_PAGE } from \"../../components/Character/CharacterPagination\";\nimport { CharacterCardType } from \"../../interfaces/character\";\nimport { characterPageState } from \"../../state/character\";\nimport { useLoading } from \"../../utils/hooks\";\nimport { GET_CHARACTERS, GET_CHARACTERS_BY_NAME } from \"../queries\";\n\ntype API_RESPONSE = {\n  characters: {\n    info: {\n      count: number;\n    };\n    results: CharacterCardType[];\n  };\n};\n\nexport const useCharacters = () => {\n  let [searchParams] = useSearchParams();\n  const search = searchParams.toString().replace(\"=\", \"\");\n  const isSearch = search.length > 0;\n\n  const { pageNumber } = useParams();\n  const page = pageNumber ? parseInt(pageNumber) : 1;\n  const setPageCount = useSetRecoilState(characterPageState);\n\n  const query = isSearch ? GET_CHARACTERS_BY_NAME : GET_CHARACTERS;\n  const variables = isSearch\n    ? {\n        page,\n        filter: { name: search },\n      }\n    : { page };\n\n  const { loading, error, data } = useQuery<API_RESPONSE, { page: number }>(\n    query,\n    { variables }\n  );\n\n  useEffect(() => {\n    if (data?.characters)\n      setPageCount(Math.ceil(data.characters.info.count / CHARACTERS_PER_PAGE));\n    else setPageCount(1);\n  }, [setPageCount, data]);\n\n  useLoading(loading);\n\n  return { error, data };\n};\n","import SearchIcon from '@mui/icons-material/Search';\nimport { LinearProgress } from '@mui/material';\nimport AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport InputBase from '@mui/material/InputBase';\nimport { alpha, styled } from '@mui/material/styles';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useRecoilValue } from 'recoil';\nimport { loadingState } from '../../state/global';\nimport { Link } from '../shared';\n\ntype Props = {};\n\nconst Search = styled('div')(({ theme }) => ({\n\tposition: 'relative',\n\tborderRadius: theme.shape.borderRadius,\n\tbackgroundColor: alpha(theme.palette.common.white, 0.15),\n\t'&:hover': {\n\t\tbackgroundColor: alpha(theme.palette.common.white, 0.25),\n\t},\n\tmarginRight: theme.spacing(2),\n\tmarginLeft: 0,\n\twidth: '100%',\n\t[theme.breakpoints.up('sm')]: {\n\t\tmarginLeft: theme.spacing(3),\n\t\twidth: '30%',\n\t},\n}));\n\nconst SearchIconWrapper = styled('div')(({ theme }) => ({\n\tpadding: theme.spacing(0, 2),\n\theight: '100%',\n\tposition: 'absolute',\n\tpointerEvents: 'none',\n\tdisplay: 'flex',\n\talignItems: 'center',\n\tjustifyContent: 'center',\n}));\n\nconst StyledInputBase = styled(InputBase)(({ theme }) => ({\n\tcolor: 'inherit',\n\t'& .MuiInputBase-input': {\n\t\tpadding: theme.spacing(1, 1, 1, 0),\n\t\t// vertical padding + font size from searchIcon\n\t\tpaddingLeft: `calc(1em + ${theme.spacing(4)})`,\n\t\ttransition: theme.transitions.create('width'),\n\t\twidth: '100%',\n\t\t[theme.breakpoints.up('md')]: {\n\t\t\twidth: '40ch',\n\t\t},\n\t},\n}));\n\nexport const SearchBar = (props: Props) => {\n\tconst [search, setSearch] = React.useState<string>('');\n\tconst navigate = useNavigate();\n\tconst handleEnter = (e: React.KeyboardEvent<HTMLInputElement>) => {\n\t\tif (e.key === 'Enter' && search !== null && search !== undefined) {\n\t\t\tnavigate(`/search?${search}`);\n\t\t}\n\t};\n\n\tconst loading = useRecoilValue(loadingState);\n\treturn (\n\t\t<Box sx={{ flexGrow: 1 }}>\n\t\t\t<AppBar position=\"fixed\">\n\t\t\t\t<Toolbar>\n\t\t\t\t\t<Link to=\"/\">\n\t\t\t\t\t\t<Typography variant=\"h5\">Rick and Morty</Typography>\n\t\t\t\t\t</Link>\n\t\t\t\t\t<Search>\n\t\t\t\t\t\t<SearchIconWrapper>\n\t\t\t\t\t\t\t<SearchIcon />\n\t\t\t\t\t\t</SearchIconWrapper>\n\t\t\t\t\t\t<StyledInputBase\n\t\t\t\t\t\t\tid=\"search-input\"\n\t\t\t\t\t\t\tplaceholder=\"Search…\"\n\t\t\t\t\t\t\tvalue={search}\n\t\t\t\t\t\t\tonKeyDown={handleEnter}\n\t\t\t\t\t\t\tonChange={(e: React.ChangeEvent<HTMLInputElement>) => setSearch(e.target.value)}\n\t\t\t\t\t\t\tinputProps={{ 'aria-label': 'search' }}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Search>\n\t\t\t\t</Toolbar>\n\t\t\t\t{loading && (\n\t\t\t\t\t<Box sx={{ width: '100%' }}>\n\t\t\t\t\t\t<LinearProgress />\n\t\t\t\t\t</Box>\n\t\t\t\t)}\n\t\t\t</AppBar>\n\t\t</Box>\n\t);\n};\nexport default SearchBar;\n","import { Box } from '@mui/material';\nimport React from 'react';\nimport { useRecoilValue } from 'recoil';\nimport { LastSeenCharacter } from '../../interfaces/character';\nimport { lastSeenCharactersState } from '../../state/character';\nimport { CharacterItem } from '../Character';\n\nexport const Footer = () => {\n\tconst results = useRecoilValue(lastSeenCharactersState);\n\treturn (\n\t\t<Box\n\t\t\tdisplay={'flex'}\n\t\t\tflexWrap={'wrap'}\n\t\t\tgap={2}\n\t\t\tcomponent=\"footer\"\n\t\t\tpadding={2}\n\t\t\tbgcolor={'lightblue'}\n\t\t\trole=\"footer\"\n\t\t>\n\t\t\t{results.map(({ id, name }: LastSeenCharacter) => (\n\t\t\t\t<CharacterItem name={name} id={id} key={id} />\n\t\t\t))}\n\t\t</Box>\n\t);\n};\n\nexport default Footer;\n","import { Box } from '@mui/material';\nimport React from 'react';\nimport { Outlet } from 'react-router-dom';\nimport SearchBar from './SearchBar';\nimport Footer from './Footer';\n\nexport const Layout = () => {\n\treturn (\n\t\t<Box>\n\t\t\t<SearchBar />\n\t\t\t<Box paddingY={4}>\n\t\t\t\t<Outlet />\n\t\t\t</Box>\n\t\t\t<Footer />\n\t\t</Box>\n\t);\n};\n\nexport default Layout;\n","import React from 'react';\nimport { BrowserRouter, Route, Routes } from 'react-router-dom';\nimport { CharacterList, CharacterProfile } from './components/Character';\nimport { Layout } from './components/Layout';\n\nexport default function App() {\n\treturn (\n\t\t<BrowserRouter>\n\t\t\t<Routes>\n\t\t\t\t<Route path=\"/\" element={<Layout />}>\n\t\t\t\t\t<Route index element={<CharacterList />} />\n\t\t\t\t\t<Route path=\"search\">\n\t\t\t\t\t\t<Route index element={<CharacterList />} />\n\t\t\t\t\t\t<Route path=\"page\">\n\t\t\t\t\t\t\t<Route path=\":pageNumber\" element={<CharacterList />} />\n\t\t\t\t\t\t</Route>\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route path=\"page\">\n\t\t\t\t\t\t<Route path=\":pageNumber\" element={<CharacterList />} />\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route path=\"profile\">\n\t\t\t\t\t\t<Route path=\":characterId\" element={<CharacterProfile />} />\n\t\t\t\t\t</Route>\n\t\t\t\t</Route>\n\t\t\t</Routes>\n\t\t</BrowserRouter>\n\t);\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { ApolloClient, ApolloProvider, InMemoryCache } from '@apollo/client';\nimport { RecoilRoot } from 'recoil';\n\nconst client = new ApolloClient({\n\turi: 'https://rickandmortyapi.com/graphql',\n\tcache: new InMemoryCache(),\n\tname: 'RickAndMorty',\n\tversion: '1.0'\n});\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<RecoilRoot>\n\t\t\t<ApolloProvider client={client}>\n\t\t\t\t<App />\n\t\t\t</ApolloProvider>\n\t\t</RecoilRoot>\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}